{"version":3,"sources":["components/Navbar/Navbar.js","components/ItemCard/ItemCard.js","globals.js","services/updateItemName.js","services/updateItemMinPercentage.js","services/updateItemMaxWeight.js","utils.js","components/EditItem/EditItem.js","services/getUserData.js","components/Dashboard/Dashboard.js","components/Login/Login.js","services/signupUser.js","components/Signup/Signup.js","components/StatusNotification/StatusNotification.js","services/updateUserName.js","services/updateUserPassword.js","services/deleteUser.js","components/UserProfile/UserProfile.js","components/About/About.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_main","isSideMenuShown","state","appControls","isLoggedIn","user","react_default","a","createElement","className","Link","to","onClick","toggleSideMenu","Fragment","logoutUser","ItemCard","isLow","itemName","currentPercentage","style","color","slotNumber","updatedDuration","currentWeight","maxWeight","minPercentage","minWeight","HOSTNAME","ENDPOINTS","updateItemName","email","password","slot_number","item_new_name","callback","queryString","encodeURIComponent","axios","post","then","response","console","log","data","catch","error","updateItemMinPercentage","min_weight_percent","updateItemMaxPercentage","timeDelta","start","end","params","only_totals","delta","measurements","w","d","h","m","s","flags","ttl","ms","Math","abs","getTime","i","length","floor","makeMinPercentage","items","min_weight","max_weight","parseInt","EditItem","match","isItemEditFormSubmitted","isItemEditMaxFormSubmitted","itemEdit","itemSlotNumber","newState","itemNewName","name","itemNewMinPercentage","setState","onEditItemNameChange","e","target","value","onEditMinPercentageChange","newVal","clearItemEditInState","onSubmit","preventDefault","showLoaderForItemEditForm","handleItemNameUpdate","type","autoComplete","required","onChange","onFocus","disabled","showLoaderForItemEditMaxForm","updateItemMaxWeight","handleItemMaxUpdate","getUserData","Dashboard","isLoginFormSubmitted","ItemCards","key","hasOwnProperty","item","current_weight","toString","last_updated","Date","last_updated_utc","getTimezoneOffset","nowTime","timeDiffObject","updatedDurationString","parseFloat","toFixed","push","components_ItemCard_ItemCard","textAlign","Route","path","render","_ref","components_EditItem_EditItem","width","margin","border","borderTop","showLoaderForLoginForm","updateUserData","_email","_password","Login","placeholder","signupUser","device_puid","_name","_device_puid","Signup","isSignupFormSubmitted","showLoaderForSignupForm","handleSignup","StatusNotification","shown","isStatusNotificationShown","msg","statusNotificationMsg","statusType","statusNotificationType","hideStatusNotification","updateUserName","user_new_name","updateUserPassword","new_password","deleteUser","UserProfile","display","isUserProfileEditable","passInputType","isUserEditNameFormSubmitted","isUserEditPasswordFormSubmitted","isUserDeleteFormSubmitted","userEdit","userNewName","userNewPassword","onNameEdit","onPasswordEdit","showLoaderForUserEditNameForm","handleUserNameUpdate","showLoaderForUserDeleteForm","handleUserPasswordUpdate","handleUserDelete","background","About","INITIAL_STATE","isUserEditNameFormActive","isUserEditPasswordFormActive","Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isUserInfoAvailable","localStorage","getItem","writeStateToLocalStorage","setItem","JSON","stringify","hideLoaderForLoginForm","hideLoaderForSignupForm","hideLoaderForItemEditForm","hideLoaderForItemEditMaxForm","hideLoaderForUserEditNameForm","showLoaderForUserEditPasswordForm","hideLoaderForUserEditPasswordForm","hideLoaderForUserDeleteForm","updateItemNewNameInState","updateItemNewMinPercentageInState","updateitemSlotNumberInState","setTimeout","showStatusNotification","evt","arguments","undefined","Error","status","is_ok","code","assertThisInitialized","handleItemMinPercentageUpdate","window","clear","location","hash","reload","parse","prevState","_this2","components_Navbar_Navbar","exact","Redirect","components_Login_Login","components_Signup_Signup","components_Dashboard_Dashboard","components_UserProfile_UserProfile","components_About_About","components_StatusNotification_StatusNotification","Component","App","HashRouter","components_Main_Main","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7e97c9e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n    const _main = props._main;\r\n    const isSideMenuShown = _main.state.appControls.isSideMenuShown;\r\n    const isLoggedIn = _main.state.user.isLoggedIn;\r\n\r\n    return (\r\n        <div className=\"Navbar\">\r\n        \r\n            <Link className=\"logo\" to=\"/\">SmartKitchen</Link>\r\n            \r\n            <button className=\"hamburger-menu\" onClick={_main.toggleSideMenu}>\r\n                <span className=\"hamburger-bar\"></span>\r\n                <span className=\"hamburger-bar\"></span>\r\n                <span className=\"hamburger-bar\"></span>\r\n            </button>\r\n            \r\n            <div className={\"overlay\" + (isSideMenuShown ? \" shown\" : \"\")}\r\n                onClick={_main.toggleSideMenu}></div>\r\n            \r\n            <div className={\"side-menu\" + (isSideMenuShown ? \" shown\" : \"\")}>\r\n                <button className=\"cross-icon\" onClick={_main.toggleSideMenu}>\r\n                    <span className=\"cross-bar\"></span>\r\n                    <span className=\"cross-bar\"></span>\r\n                </button>\r\n\r\n                <ul>\r\n                    {isLoggedIn \r\n                    ? (<>\r\n                        <li>\r\n                            <Link className=\"menu-link\" to=\"/dashboard\" \r\n                                onClick={_main.toggleSideMenu}\r\n                            >\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className=\"menu-link\" to=\"/myprofile\" \r\n                                onClick={_main.toggleSideMenu}\r\n                            >\r\n                                My Profile\r\n                            </Link>\r\n                        </li>\r\n                    </>)\r\n                    : (<>\r\n                        <li>\r\n                            <Link className=\"menu-link\" to=\"/login\"\r\n                                onClick={_main.toggleSideMenu}\r\n                            >\r\n                                Login\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className=\"menu-link\" to=\"/signup\"\r\n                                onClick={_main.toggleSideMenu}\r\n                            >\r\n                                Sign Up\r\n                            </Link>\r\n                        </li>\r\n                    </>)\r\n                    }\r\n                    \r\n                    <hr />\r\n                    <li>\r\n                        <Link className=\"menu-link\" to=\"/about\" \r\n                            onClick={_main.toggleSideMenu}\r\n                        >\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                    {isLoggedIn\r\n                    ? <li>\r\n                        <Link className=\"menu-link\" to=\"/logout\" \r\n                            onClick={_main.logoutUser}\r\n                        >\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                    : null}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport './ItemCard.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ItemCard = (props) => {\r\n\r\n    return (\r\n    <div className=\"ItemCard\">\r\n        <div className={\"item-card-ctr\" + (props.isLow ? \" is-low\" : \"\")}>\r\n            <span className=\"name\">\r\n                {props.itemName}\r\n            </span>\r\n\r\n            <span className=\"current-percentage\">\r\n                {props.currentPercentage} {props.isLow ? <b style={{color: 'crimson'}}> (Low)</b> : null}\r\n            </span>\r\n\r\n            <span className=\"slot-number\">\r\n                Slot: <b>{props.slotNumber}</b>\r\n            </span>\r\n\r\n            <span className=\"updated-duration\">\r\n                {props.updatedDuration} ago\r\n            </span>\r\n            <span className=\"weights left\">\r\n                Now: <i>{props.currentPercentage}</i> <br /><b>{props.currentWeight}g</b>\r\n            </span>\r\n\r\n            <span className=\"weights center\">\r\n                Full: <i>100%</i> <br /><b>{props.maxWeight}g</b>\r\n            </span>\r\n\r\n            <span className=\"weights right\">\r\n                Low: <i>{props.minPercentage + '%'} </i> <br /><b>{props.minWeight}g</b>\r\n            </span>\r\n\r\n            <Link className=\"edit-btn\" \r\n                to={\"/dashboard/item/edit/\" + props.slotNumber}\r\n            >\r\n                EDIT\r\n            </Link>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ItemCard;\r\n","const HOSTNAME = 'http://localhost';\r\n\r\nconst ENDPOINTS = {\r\n    newUser: HOSTNAME + '/user/new',\r\n    deleteUser: HOSTNAME + '/user/delete',\r\n    userInfo: HOSTNAME + '/user/info',\r\n    editUserName: HOSTNAME + '/user/edit/name',\r\n    editUserPassword: HOSTNAME + '/user/edit/password',\r\n    editItemName: HOSTNAME + '/item/edit/name',\r\n    editItemMaxWeight: HOSTNAME + '/item/edit/maxweight',\r\n    editItemMinWeight: HOSTNAME + '/item/edit/minweight',\r\n};\r\n\r\nexport {\r\n    ENDPOINTS,\r\n    HOSTNAME\r\n};","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst updateItemName = (email, password, slot_number, item_new_name, callback) => {\r\n    const queryString = \r\n        '?email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password) +\r\n        '&slot_number=' + encodeURIComponent(slot_number) + \r\n        '&item_new_name=' + encodeURIComponent(item_new_name);\r\n    \r\n    axios.post(ENDPOINTS.editItemName + queryString)\r\n    .then((response) => {\r\n        console.log(response)\r\n        callback(response.data);\r\n    }).catch((error) => {\r\n        console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default updateItemName;","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst updateItemMinPercentage = (email, password, slot_number, min_weight_percent, callback) => {\r\n    const queryString = \r\n        '?email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password) +\r\n        '&slot_number=' + encodeURIComponent(slot_number) + \r\n        '&min_weight_percent=' + encodeURIComponent(min_weight_percent);\r\n    \r\n    axios.post(ENDPOINTS.editItemMinWeight + queryString)\r\n    .then((response) => {\r\n        console.log(response)\r\n        callback(response.data);\r\n    }).catch((error) => {\r\n        console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default updateItemMinPercentage;","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst updateItemMaxPercentage = (email, password, slot_number, callback) => {\r\n    const queryString = \r\n        '?email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password) +\r\n        '&slot_number=' + encodeURIComponent(slot_number);\r\n    \r\n    axios.post(ENDPOINTS.editItemMaxWeight + queryString)\r\n    .then((response) => {\r\n        console.log(response)\r\n        callback(response.data);\r\n    }).catch((error) => {\r\n        console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default updateItemMaxPercentage;","\r\nfunction timeDelta( start, end, params, only_totals ) {\r\n    // taken from,\r\n    // https://gist.github.com/THEtheChad/1297617\r\n    var delta = {}\r\n      , measurements = {\r\n            w: 604800000,\r\n            d: 86400000,\r\n            h: 3600000,\r\n            m: 60000,\r\n            s: 1000\r\n            }\r\n      , flags = params || 'wdhms'\r\n    ;//var\r\n\r\n    delta.ttl = delta.ms = Math.abs( end.getTime() - start.getTime() );\r\n\r\n    // do caclulations for each flag\r\n    for( var i = 0; i < flags.length; i++ ) {\r\n        delta[ flags[i] ] = delta.ms / measurements[ flags[i] ];\r\n        // unless totals are specified,\r\n        // value is broken down into components\r\n        if( !only_totals ) {\r\n            delta[ flags[i] ] = Math.floor( delta[ flags[i] ] );\r\n            delta.ms -= delta[ flags[i] ] * measurements[ flags[i] ];\r\n        }\r\n    };\r\n    \r\n    return delta;\r\n}\r\n\r\nconst makeMinPercentage = (_main, slotNumber) => {\r\n    const minPercentage = \r\n        _main.state.items[slotNumber].min_weight !== null \r\n        && _main.state.items[slotNumber].min_weight !== 0\r\n        && _main.state.items[slotNumber].max_weight !== null \r\n        && _main.state.items[slotNumber].max_weight !== 0\r\n        ? parseInt(\r\n            (_main.state.items[slotNumber].min_weight \r\n            / _main.state.items[slotNumber].max_weight) * 100,\r\n            10)\r\n        : 0;\r\n    return minPercentage;\r\n}\r\n\r\n\r\nexport {\r\n    timeDelta,\r\n    makeMinPercentage,\r\n}","import React, { Component } from 'react';\r\nimport './EditItem.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport updateItemName from '../../services/updateItemName';\r\nimport updateItemMinPercentage from '../../services/updateItemMinPercentage';\r\nimport updateItemMaxWeight from '../../services/updateItemMaxWeight';\r\nimport { makeMinPercentage } from '../../utils';\r\n\r\nconst EditItem = (props) => {\r\n    const _main = props._main;\r\n    const match = props.match;\r\n    const isItemEditFormSubmitted = \r\n        _main.state.appControls.isItemEditFormSubmitted;\r\n    const isItemEditMaxFormSubmitted = \r\n        _main.state.appControls.isItemEditMaxFormSubmitted;\r\n    const minPercentage = makeMinPercentage(_main, match.params.slotNumber);\r\n\r\n    if (_main.state.itemEdit.itemSlotNumber \r\n            !== match.params.slotNumber) {\r\n        let newState = _main.state;\r\n\r\n        newState.itemEdit.itemSlotNumber = \r\n            match.params.slotNumber;\r\n        \r\n        newState.itemEdit.itemNewName = \r\n            _main.state.items[match.params.slotNumber].name;\r\n        \r\n        newState.itemEdit.itemNewMinPercentage = \r\n            parseInt(minPercentage, 10);\r\n        \r\n        _main.setState(newState);\r\n    }\r\n\r\n    console.log(props.match.params.slotNumber)\r\n    console.log(_main)\r\n    \r\n    const onEditItemNameChange = (e) => {\r\n        let newState = _main.state;\r\n        newState.itemEdit.itemNewName = e.target.value;\r\n        _main.setState(newState);\r\n    };\r\n    \r\n    const onEditMinPercentageChange = (e) => {\r\n        const newVal = parseInt(e.target.value, 10);\r\n        if (newVal > -1 && newVal < 100) {\r\n            let newState = _main.state;\r\n            newState.itemEdit.itemNewMinPercentage = newVal;\r\n            _main.setState(newState);\r\n        }\r\n    };\r\n   \r\n    const onItemEditFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForItemEditForm();\r\n        if (!isItemEditFormSubmitted) {\r\n            updateItemName(\r\n                _main.state.user.email, \r\n                _main.state.user.password, \r\n                _main.state.itemEdit.itemSlotNumber, \r\n                _main.state.itemEdit.itemNewName,\r\n                _main.handleItemNameUpdate\r\n            );\r\n            updateItemMinPercentage(\r\n                _main.state.user.email, \r\n                _main.state.user.password, \r\n                _main.state.itemEdit.itemSlotNumber, \r\n                _main.state.itemEdit.itemNewMinPercentage,\r\n                _main.handleItemNameUpdate\r\n            );\r\n        }\r\n    };\r\n    \r\n    const onItemEditMaxFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForItemEditMaxForm();\r\n        if (!isItemEditMaxFormSubmitted) {\r\n            updateItemMaxWeight(\r\n                _main.state.user.email, \r\n                _main.state.user.password, \r\n                _main.state.itemEdit.itemSlotNumber, \r\n                _main.handleItemMaxUpdate\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"EditItem\">\r\n            <Link className=\"overlay shown\" to=\"/dashboard\"\r\n                onClick={_main.clearItemEditInState}\r\n            ></Link>\r\n            <div className=\"edit-item-ctr\">\r\n                <form className=\"form\" onSubmit={onItemEditFormSubmit}>\r\n                    <h3>\r\n                        Edit Item - Slot {_main.state.itemEdit.itemSlotNumber}\r\n                    </h3>\r\n                    <label>\r\n                        <span>Item Name</span>\r\n                        <input type=\"text\" autoComplete=\"off\" required \r\n                            value={_main.state.itemEdit.itemNewName} \r\n                            onChange={onEditItemNameChange}\r\n                            onFocus={onEditItemNameChange}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <span>Low Limit (0 - 99%)</span>\r\n                        <input type=\"number\" autoComplete=\"off\" required \r\n                            value={_main.state.itemEdit.itemNewMinPercentage} \r\n                            onChange={onEditMinPercentageChange}\r\n                            onFocus={onEditMinPercentageChange}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <button \r\n                        type=\"submit\"\r\n                        disabled={isItemEditFormSubmitted}\r\n                    >\r\n                        &emsp;\r\n                        {isItemEditFormSubmitted \r\n                            ? <div className=\"loader in-btn\"></div> \r\n                            : \"Save\"\r\n                        }\r\n                        &emsp;\r\n                    </button>\r\n                </form>\r\n                <br />\r\n                <form className=\"form\" onSubmit={onItemEditMaxFormSubmit}>\r\n                    <button \r\n                        className=\"secondary\"\r\n                        type=\"submit\"\r\n                        disabled={isItemEditMaxFormSubmitted}\r\n                    >\r\n                        &emsp;\r\n                        {isItemEditMaxFormSubmitted \r\n                            ? <div className=\"loader in-btn\"></div> \r\n                            : \"SET AS FULL\"\r\n                        }\r\n                        &emsp;\r\n                    </button>\r\n                </form>\r\n                <Link className=\"close\" to=\"/dashboard\" \r\n                    onClick={_main.clearItemEditInState}\r\n                >\r\n                    CLOSE\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditItem;\r\n","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst getUserData = (email, password, callback) => {\r\n    const queryString = \r\n        '?email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password);\r\n    \r\n    axios.post(ENDPOINTS.userInfo + queryString)\r\n    .then((response) => {\r\n        // console.log(response)\r\n        callback(response.data, password);\r\n    }).catch((error) => {\r\n        // console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default getUserData;","import React, { Component } from 'react';\r\nimport './Dashboard.css';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport Navbar from '../Navbar/Navbar';\r\nimport ItemCard from '../ItemCard/ItemCard';\r\nimport EditItem from '../EditItem/EditItem';\r\n\r\nimport getUserData from '../../services/getUserData';\r\n\r\nimport {timeDelta} from '../../utils';\r\n\r\nconst Dashboard = (props) => {\r\n    const _main = props._main;\r\n    const isLoginFormSubmitted = _main.state.appControls.isLoginFormSubmitted;\r\n    const onRefreshBtnClick = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForLoginForm();\r\n        if (!isLoginFormSubmitted) {\r\n            getUserData(\r\n                _main.state.user.email, \r\n                _main.state.user.password, \r\n                _main.updateUserData\r\n            );\r\n        }\r\n    };\r\n\r\n    let ItemCards = [];\r\n    if (_main.state.items !== null) {\r\n        for (const key in _main.state.items) {\r\n            if (!_main.state.items.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            const item = _main.state.items[key];\r\n            const current_weight = item.current_weight;\r\n            const max_weight = item.max_weight;\r\n            let currentPercentage = 'N/A';\r\n\r\n            if (current_weight !== null && max_weight !== null &&\r\n                    max_weight !== 0) {\r\n                currentPercentage = \r\n                    parseInt(\r\n                        ((item.current_weight / item.max_weight) * 100), 10\r\n                    ).toString() + '%';\r\n            }\r\n            \r\n            const last_updated = new Date(item.last_updated);\r\n            const last_updated_utc = new Date(last_updated.getTime() + \r\n                (last_updated.getTimezoneOffset() * 60000));\r\n            const nowTime = new Date();\r\n            const nowUtc = new Date(nowTime.getTime() + \r\n                (nowTime.getTimezoneOffset() * 60000));\r\n            const timeDiffObject = timeDelta(last_updated_utc, nowUtc);\r\n            // console.log('last_updated: ' + last_updated)\r\n            // console.log('last_updated_utc: ' + last_updated_utc)\r\n            // console.log('nowTime: ' + nowTime)\r\n            // console.log('nowUtc: ' + nowUtc)\r\n            // console.log(timeDiffObject)\r\n            let updatedDurationString = '';\r\n\r\n            if (timeDiffObject.s >= 0) {\r\n                if (timeDiffObject.s > 5) {\r\n                    updatedDurationString = \r\n                        (timeDiffObject.s - (timeDiffObject.s % 5))\r\n                        .toString() + ' seconds';\r\n                } else {\r\n                    updatedDurationString = '5 seconds';\r\n                }\r\n            }\r\n            if (timeDiffObject.m !== 0) {\r\n                updatedDurationString = \r\n                    (timeDiffObject.m).toString() + \r\n                    (timeDiffObject.m > 1 \r\n                        ? ' minutes'\r\n                        : ' minute');\r\n            }\r\n            if (timeDiffObject.h !== 0) {\r\n                updatedDurationString = \r\n                    (timeDiffObject.h).toString() + \r\n                    (timeDiffObject.h > 1 \r\n                        ? ' hours'\r\n                        : ' hour');\r\n            }\r\n            if (timeDiffObject.d !== 0) {\r\n                updatedDurationString = \r\n                    (timeDiffObject.d).toString() + \r\n                    (timeDiffObject.d > 1 \r\n                        ? ' days'\r\n                        : ' day');\r\n            }\r\n            if (timeDiffObject.w !== 0) {\r\n                updatedDurationString = \r\n                    (timeDiffObject.w).toString() + \r\n                    (timeDiffObject.w > 1 \r\n                        ? ' weeks'\r\n                        : ' week');\r\n            }\r\n\r\n            const minPercentage = \r\n                item.min_weight !== null \r\n                && item.min_weight !== 0\r\n                && item.max_weight !== null \r\n                && item.max_weight !== 0\r\n                ? parseFloat((item.min_weight \r\n                    / item.max_weight) * 100).toFixed(1)\r\n                : 0;\r\n\r\n            ItemCards.push(\r\n                <ItemCard \r\n                    key={key}\r\n                    slotNumber={key}\r\n                    itemName={item.name}\r\n                    currentPercentage={currentPercentage}\r\n                    minPercentage={minPercentage}\r\n                    currentWeight={parseFloat(item.current_weight).toFixed(1)}\r\n                    maxWeight={parseFloat(item.max_weight).toFixed(1)}\r\n                    minWeight={parseFloat(item.min_weight).toFixed(1)}\r\n                    updatedDuration={updatedDurationString}\r\n                    isLow={item.current_weight < item.min_weight ? true: false}\r\n                    _main={_main}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Dashboard\">\r\n            {/* <Navbar _main={_main} /> */}\r\n            <p className=\"welcome-text\">\r\n                Welcome, <b>{_main.state.user.name}</b> :-)\r\n            </p>\r\n            \r\n            {ItemCards}\r\n\r\n            {ItemCards.length === 0 \r\n                ? <p className=\"welcome-text\" style={{textAlign: 'center'}}>\r\n                    <b>No Data Found!</b>\r\n                    <br />\r\n                    Please Setup and Initialize the Device.\r\n                </p> : null}\r\n\r\n            <Route \r\n                path=\"/dashboard/item/edit/:slotNumber\"\r\n                render={({match}) => {\r\n                    return (\r\n                        <EditItem \r\n                            match={match}\r\n                            _main={_main}\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n\r\n            <br />\r\n            <hr style={{\r\n                width: 'calc(100% - 62px)', \r\n                margin: 'auto', \r\n                border: 'none', \r\n                borderTop: '2px dotted #aaa'\r\n            }} />\r\n            <br />\r\n            \r\n            <button className=\"refresh-btn\"\r\n                disabled={isLoginFormSubmitted}\r\n                onClick={onRefreshBtnClick}\r\n            >\r\n                {isLoginFormSubmitted \r\n                    ? <div className=\"loader in-btn\"></div> \r\n                    : \"Refresh\"\r\n                }\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport getUserData from '../../services/getUserData';\r\n\r\nlet _email = '';\r\nlet _password = '';\r\n\r\nconst Login = (props) => {\r\n    const _main = props._main;\r\n    const isLoginFormSubmitted = _main.state.appControls.isLoginFormSubmitted;\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForLoginForm();\r\n        if (!isLoginFormSubmitted) {\r\n            getUserData(_email, _password, _main.updateUserData);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            {/* <div className=\"card\"> */}\r\n                <h5 className=\"logo-heading\">SmartKitchen</h5>\r\n                <br/>\r\n                <h4 className=\"form-heading\">Login</h4>\r\n                <form className=\"form\" onSubmit={onFormSubmit}\r\n                >\r\n                    <label>\r\n                        <span>Email</span>\r\n                        <input type=\"email\" autoComplete=\"off\"\r\n                            placeholder=\"e.g. youremail@xyz.com\" required \r\n                            onChange={(e) => {_email = e.target.value}}\r\n                            onFocus={(e) => {_email = e.target.value}}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <span>Password</span>\r\n                        <input type=\"password\" autoComplete=\"off\"\r\n                            placeholder=\"Enter Password Here ...\" required \r\n                            onChange={(e) => {_password = e.target.value}}\r\n                            onFocus={(e) => {_password = e.target.value}}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <button \r\n                        type=\"submit\"\r\n                        disabled={isLoginFormSubmitted}\r\n                    >\r\n                        &emsp;\r\n                        {isLoginFormSubmitted \r\n                            ? <div className=\"loader in-btn\"></div> \r\n                            : \"Login\"\r\n                        }\r\n                        &emsp;\r\n                    </button>\r\n                </form>\r\n                <br />\r\n                <Link className=\"ref-link\" to=\"/signup\">\r\n                    Haven't signed up yet? <b>\r\n                        Go to Signup <span className=\"arrow-right\"></span>\r\n                    </b>\r\n                </Link>\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst signupUser = (name, email, password, device_puid, callback) => {\r\n    const queryString = \r\n        '?name=' + encodeURIComponent(name) + \r\n        '&email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password) +\r\n        '&device_puid=' + encodeURIComponent(device_puid);\r\n    \r\n    axios.post(ENDPOINTS.newUser + queryString)\r\n    .then((response) => {\r\n        console.log(response)\r\n        callback(response.data);\r\n    }).catch((error) => {\r\n        console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default signupUser;","import React, { Component } from 'react';\r\nimport './Signup.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport signupUser from '../../services/signupUser';\r\n\r\nlet _name = '';\r\nlet _email = '';\r\nlet _password = '';\r\nlet _device_puid = '';\r\n\r\nconst Signup = (props) => {\r\n    const _main = props._main;\r\n    const isSignupFormSubmitted = _main.state.appControls.isSignupFormSubmitted;\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForSignupForm();\r\n        if (!isSignupFormSubmitted) {\r\n            signupUser(\r\n                _name, _email, _password, _device_puid, _main.handleSignup\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            {/* <div className=\"card\"> */}\r\n                <h5 className=\"logo-heading\">SmartKitchen</h5>\r\n                <br />\r\n                <h4 className=\"form-heading\">Signup</h4>\r\n                <form className=\"form\" onSubmit={onFormSubmit}>\r\n                    <label>\r\n                        <span>Name</span>\r\n                        <input type=\"text\" autoComplete=\"off\"\r\n                            placeholder=\"Enter Your Name Here ...\" required \r\n                            onChange={(e) => {_name = e.target.value}}\r\n                            onFocus={(e) => {_name = e.target.value}}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <span>Email</span>\r\n                        <input type=\"email\" autoComplete=\"off\"\r\n                            placeholder=\"e.g. youremail@xyz.com\" required \r\n                            onChange={(e) => {_email = e.target.value}}\r\n                            onFocus={(e) => {_email = e.target.value}}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <span>Password</span>\r\n                        <input type=\"password\" autoComplete=\"off\"\r\n                            placeholder=\"Enter Password Here ...\" required \r\n                            onChange={(e) => {_password = e.target.value}}\r\n                            onFocus={(e) => {_password = e.target.value}}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <span>Device ID</span>\r\n                        <input type=\"text\" autoComplete=\"off\"\r\n                            placeholder=\"Enter Device ID Here ...\" required \r\n                            onChange={(e) => {_device_puid = e.target.value}}\r\n                            onFocus={(e) => {_device_puid = e.target.value}}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <button \r\n                        type=\"submit\"\r\n                        disabled={isSignupFormSubmitted}\r\n                    >\r\n                        &emsp;\r\n                        {isSignupFormSubmitted \r\n                            ? <div className=\"loader in-btn\"></div> \r\n                            : \"Signup\"\r\n                        }\r\n                        &emsp;\r\n                    </button>\r\n                </form>\r\n                <br />\r\n                <Link className=\"ref-link\" to=\"/\">\r\n                    Already registered? <b>\r\n                        Go to Login <span className=\"arrow-right\"></span>\r\n                    </b>\r\n                </Link>\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from 'react';\r\nimport './StatusNotification.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StatusNotification = (props) => {\r\n    const _main = props._main;\r\n    const shown = \r\n        _main.state.appControls.isStatusNotificationShown \r\n        ? \"shown \" : \"\";\r\n    const msg = _main.state.statusNotificationMsg;\r\n    const statusType = _main.state.statusNotificationType;\r\n    const hideStatusNotification = _main.hideStatusNotification;\r\n\r\n    return (\r\n        <div className={\"StatusNotification \" + shown + statusType}>\r\n            <span className=\"msg\">\r\n                {msg}\r\n            </span>\r\n            <button \r\n                className=\"cross-icon\" \r\n                onClick={hideStatusNotification}\r\n            >\r\n                <span className=\"cross-bar\"></span>\r\n                <span className=\"cross-bar\"></span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusNotification;\r\n","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst updateUserName = (email, password, user_new_name, callback) => {\r\n    const queryString = \r\n        '?email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password) +\r\n        '&user_new_name=' + encodeURIComponent(user_new_name);\r\n    \r\n    axios.post(ENDPOINTS.editUserName + queryString)\r\n    .then((response) => {\r\n        console.log(response)\r\n        callback(response.data);\r\n    }).catch((error) => {\r\n        console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default updateUserName;","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst updateUserPassword = (email, password, new_password, callback) => {\r\n    const queryString = \r\n        '?email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password) +\r\n        '&new_password=' + encodeURIComponent(new_password);\r\n    \r\n    axios.post(ENDPOINTS.editUserPassword + queryString)\r\n    .then((response) => {\r\n        console.log(response)\r\n        callback(response.data);\r\n    }).catch((error) => {\r\n        console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default updateUserPassword;","import axios from 'axios';\r\n\r\nimport {ENDPOINTS} from '../globals';\r\n\r\nconst deleteUser = (email, password, callback) => {\r\n    const queryString = \r\n        '?email=' + encodeURIComponent(email) + \r\n        '&password=' + encodeURIComponent(password);\r\n    \r\n    axios.post(ENDPOINTS.deleteUser + queryString)\r\n    .then((response) => {\r\n        // console.log(response)\r\n        callback(response.data, password);\r\n    }).catch((error) => {\r\n        // console.log(error)\r\n        callback(error);\r\n    });\r\n}\r\n\r\nexport default deleteUser;","import React, { Component } from 'react';\r\nimport './UserProfile.css';\r\n\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\nimport updateUserName from '../../services/updateUserName';\r\nimport updateUserPassword from '../../services/updateUserPassword';\r\nimport deleteUser from '../../services/deleteUser';\r\n\r\nconst UserProfile = (props) => {\r\n    const _main = props._main;\r\n    const display = \r\n        _main.state.appControls.isUserProfileEditable ? 'block' : 'none';\r\n    const passInputType = \r\n        _main.state.appControls.isUserProfileEditable ? 'text' : 'password';\r\n    const isUserEditNameFormSubmitted = \r\n        _main.state.appControls.isUserEditNameFormSubmitted;\r\n    const isUserEditPasswordFormSubmitted = \r\n        _main.state.appControls.isUserEditPasswordFormSubmitted;\r\n    const isUserProfileEditable = \r\n        !_main.state.appControls.isUserProfileEditable;\r\n    const isUserDeleteFormSubmitted = \r\n        _main.state.appControls.isUserDeleteFormSubmitted;\r\n\r\n    if (_main.state.userEdit.userNewName === null ) {\r\n        let newState = _main.state;\r\n        newState.userEdit.userNewName = _main.state.user.name;\r\n        newState.userEdit.userNewPassword = _main.state.user.password;\r\n        _main.setState(newState);\r\n    }\r\n    \r\n    const toggleEditable = (e) => {\r\n        let newState = _main.state;\r\n        newState.appControls.isUserProfileEditable = \r\n            !newState.appControls.isUserProfileEditable;\r\n        newState.userEdit.userNewName = _main.state.user.name;\r\n        newState.userEdit.userNewPassword = _main.state.user.password;\r\n        _main.setState(newState);\r\n    }\r\n\r\n    const onNameEdit = (e) => {\r\n        let newState = _main.state;\r\n        newState.userEdit.userNewName = e.target.value;\r\n        _main.setState(newState);\r\n    }\r\n    \r\n    const onPasswordEdit = (e) => {\r\n        let newState = _main.state;\r\n        newState.userEdit.userNewPassword = e.target.value;\r\n        _main.setState(newState);\r\n    }\r\n\r\n    const onNameEditFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForUserEditNameForm();\r\n        updateUserName(\r\n            _main.state.user.email,\r\n            _main.state.user.password,\r\n            _main.state.userEdit.userNewName,\r\n            _main.handleUserNameUpdate\r\n        );\r\n    }\r\n        \r\n    const onPasswordEditFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForUserDeleteForm();\r\n        updateUserPassword(\r\n            _main.state.user.email,\r\n            _main.state.user.password,\r\n            _main.state.userEdit.userNewPassword,\r\n            _main.handleUserPasswordUpdate\r\n        );\r\n    }\r\n   \r\n    const onDeleteUser = (e) => {\r\n        e.preventDefault();\r\n        _main.showLoaderForUserDeleteForm();\r\n        deleteUser(\r\n            _main.state.user.email,\r\n            _main.state.user.password,\r\n            _main.handleUserDelete\r\n        );\r\n    }\r\n\r\n    return (\r\n    <div className=\"UserProfile\">\r\n        {/* <Navbar _main={_main} /> */}\r\n        <div className=\"user-profile-ctr\">\r\n            <h3>\r\n                {_main.state.user.name}'s Profile \r\n                <button className={\r\n                    \"edit-btn\" +\r\n                    (_main.state.appControls.isUserProfileEditable \r\n                    ? \" active\" : \"\")}\r\n                    onClick={toggleEditable}\r\n                >\r\n                    {(_main.state.appControls.isUserProfileEditable \r\n                    ? \"BACK\" : \"EDIT\")}\r\n                </button>\r\n            </h3>\r\n            <br />\r\n            <form className=\"form\" onSubmit={onNameEditFormSubmit}>\r\n                <label>\r\n                    <span>Name</span>\r\n                    <input type=\"text\" autoComplete=\"off\"\r\n                        disabled={isUserProfileEditable}\r\n                        className={\r\n                            _main.state.appControls.isUserProfileEditable \r\n                            ? \"editable\" : \" non-editable\"\r\n                        }\r\n                        value={_main.state.userEdit.userNewName}\r\n                        placeholder=\"Enter Your Name Here ...\" required \r\n                        onChange={onNameEdit}\r\n                        onFocus={onNameEdit}\r\n                    />\r\n                </label>\r\n                \r\n                <button className=\"submit-btn\"\r\n                    style={{display: display}}\r\n                    type=\"submit\"\r\n                    disabled={isUserEditNameFormSubmitted}\r\n                >\r\n                    &emsp;\r\n                    {isUserEditNameFormSubmitted \r\n                        ? <div className=\"loader in-btn\"></div> \r\n                        : \"Save\"\r\n                    }\r\n                    &emsp;\r\n                </button>\r\n            </form>\r\n            \r\n            <form className=\"form\" onSubmit={onPasswordEditFormSubmit}>\r\n                <label>\r\n                    <span>Password</span>\r\n                    <input type={passInputType} autoComplete=\"off\"\r\n                        disabled={isUserProfileEditable}\r\n                        className={\r\n                            _main.state.appControls.isUserProfileEditable \r\n                            ? \"editable\" : \" non-editable\"\r\n                        }\r\n                        value={_main.state.userEdit.userNewPassword}\r\n                        placeholder=\"Enter Password Here ...\" required \r\n                        onChange={onPasswordEdit}\r\n                        onFocus={onPasswordEdit}\r\n                        />\r\n                </label>\r\n                \r\n                <button className=\"submit-btn\"\r\n                    style={{display: display}}\r\n                    type=\"submit\"\r\n                    disabled={isUserEditPasswordFormSubmitted}\r\n                >\r\n                    &emsp;\r\n                    {isUserEditPasswordFormSubmitted \r\n                        ? <div className=\"loader in-btn\"></div> \r\n                        : \"Save\"\r\n                    }\r\n                    &emsp;\r\n                </button>\r\n            </form>\r\n            \r\n            <form className=\"form\">\r\n                <label>\r\n                    <span>Email</span>\r\n                    <input type=\"email\" autoComplete=\"off\"\r\n                        className=\"non-editable\"\r\n                        disabled={true}\r\n                        value={_main.state.user.email}\r\n                        placeholder=\"e.g. youremail@xyz.com\" required \r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Device ID</span>\r\n                    <input type=\"text\" autoComplete=\"off\"\r\n                        className=\"non-editable\"\r\n                        disabled={true}\r\n                        value={_main.state.user.device_puid}\r\n                        placeholder=\"Enter Device ID Here ...\" required \r\n                    />\r\n                </label>\r\n            </form>\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <form className=\"form\" onSubmit={onDeleteUser}>\r\n                <button \r\n                    type=\"submit\"\r\n                    style={{background: 'crimson'}}\r\n                    disabled={isUserDeleteFormSubmitted}\r\n                >\r\n                    &emsp;\r\n                    {isUserDeleteFormSubmitted \r\n                        ? <div className=\"loader in-btn\"></div> \r\n                        : \"DELETE ACCOUNT\"\r\n                    }\r\n                    &emsp;\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { Component } from 'react';\r\nimport './About.css';\r\n\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\nconst About = (props) => {\r\n    const _main = props._main;\r\n    \r\n    return (\r\n    <div className=\"About\">\r\n        {/* <Navbar _main={_main} /> */}\r\n        <div className=\"about-ctr\">\r\n            <h3>About Project</h3>\r\n            <p>\r\n                Dummy Text. It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\r\n            </p>\r\n            <br />\r\n            <h3>Project Members</h3>\r\n            <p><b>Zill E Rehman</b><br />BSIT-F15-LC-204</p>\r\n            <p><b>Umair Hussnain</b><br />BSIT-F15-LC-206</p>\r\n            <p><b>Muhammad Imran</b><br />BSIT-F15-LC-207</p>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport './Main.css';\r\nimport { Route, Link, Switch, Redirect } from 'react-router-dom';\r\n\r\n// components\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport Login from '../Login/Login';\r\nimport Signup from '../Signup/Signup';\r\nimport StatusNotification from '../StatusNotification/StatusNotification';\r\nimport UserProfile from '../UserProfile/UserProfile';\r\nimport About from '../About/About';\r\n\r\n// services\r\nimport getUserData from '../../services/getUserData';\r\nimport { makeMinPercentage } from '../../utils';\r\n\r\n// others\r\nimport {HOSTNAME} from '../../globals';\r\n\r\nlet INITIAL_STATE = {\r\n    appControls: {\r\n        isSideMenuShown: false,\r\n        isLoginFormSubmitted: false,\r\n        isSignupFormSubmitted: false,\r\n        isStatusNotificationShown: false,\r\n        isItemEditFormSubmitted: false,\r\n        isItemEditMaxFormSubmitted: false,\r\n        isUserEditNameFormActive: false,\r\n        isUserEditNameFormSubmitted: false,\r\n        isUserEditPasswordFormActive: false,\r\n        isUserEditPasswordFormSubmitted: false,\r\n        isUserProfileEditable: false,\r\n        isUserDeleteFormSubmitted: false,\r\n    },\r\n    user: {\r\n        name: null,\r\n        email: null,\r\n        password: null,\r\n        device_puid: null,\r\n        isLoggedIn: false,\r\n    },\r\n    items: null,\r\n    statusNotificationMsg: null,\r\n    statusNotificationType: null,\r\n    itemEdit: {\r\n        itemSlotNumber: null,\r\n        itemNewName: null,\r\n        itemNewMinPercentage: null,\r\n    },\r\n    userEdit: {\r\n        userNewName: null,\r\n        userNewPassword: null,\r\n    }\r\n};\r\n\r\n// TODOs\r\n// reset max service\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = JSON.parse(JSON.stringify(INITIAL_STATE));\r\n        \r\n        if (this.isUserInfoAvailable()) {\r\n            const prevState = JSON.parse(localStorage.getItem('state'));\r\n            this.state.user = prevState.user;\r\n            this.state.items = prevState.items;\r\n            getUserData(\r\n                this.state.user.email, \r\n                this.state.user.password,\r\n                this.updateUserData\r\n            );\r\n        }\r\n    }\r\n\r\n    isUserInfoAvailable = () => {\r\n        let state = localStorage.getItem('state');\r\n        if (state === null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    writeStateToLocalStorage = () => {\r\n        if (this.state.user.isLoggedIn) {\r\n            localStorage.setItem('state', JSON.stringify(this.state));\r\n        }\r\n    }\r\n\r\n    showLoaderForLoginForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isLoginFormSubmitted = true;\r\n        this.setState(newState);\r\n    }\r\n    hideLoaderForLoginForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isLoginFormSubmitted = false;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    showLoaderForSignupForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isSignupFormSubmitted = true;\r\n        this.setState(newState);\r\n    }\r\n    hideLoaderForSignupForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isSignupFormSubmitted = false;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    showLoaderForItemEditForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isItemEditFormSubmitted = true;\r\n        this.setState(newState);\r\n    }\r\n    hideLoaderForItemEditForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isItemEditFormSubmitted = false;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    showLoaderForItemEditMaxForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isItemEditMaxFormSubmitted = true;\r\n        this.setState(newState);\r\n    }\r\n    hideLoaderForItemEditMaxForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isItemEditMaxFormSubmitted = false;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    showLoaderForUserEditNameForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isUserEditNameFormSubmitted = true;\r\n        this.setState(newState);\r\n    }\r\n    hideLoaderForUserEditNameForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isUserEditNameFormSubmitted = false;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    showLoaderForUserEditPasswordForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isUserEditPasswordFormSubmitted = true;\r\n        this.setState(newState);\r\n    }\r\n    hideLoaderForUserEditPasswordForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isUserEditPasswordFormSubmitted = false;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    showLoaderForUserDeleteForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isUserDeleteFormSubmitted = true;\r\n        this.setState(newState);\r\n    }\r\n    hideLoaderForUserDeleteForm = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isUserDeleteFormSubmitted = false;\r\n        this.setState(newState);\r\n    }\r\n\r\n    updateItemNewNameInState = (itemNewName) => {\r\n        let newState = this.state;\r\n        newState.itemEdit.itemNewName = itemNewName;\r\n        this.setState(newState);\r\n    }\r\n    updateItemNewMinPercentageInState = (itemNewMinPercentage) => {\r\n        let newState = this.state;\r\n        newState.itemEdit.itemNewMinPercentage = itemNewMinPercentage;\r\n        this.setState(newState);\r\n    }\r\n    updateitemSlotNumberInState = (itemSlotNumber) => {\r\n        let newState = this.state;\r\n        newState.itemEdit.itemSlotNumber = itemSlotNumber;\r\n        this.setState(newState);\r\n    }\r\n    clearItemEditInState = () => {\r\n        let newState = this.state;\r\n        if (newState.itemEdit.itemSlotNumber !== null) {\r\n            newState.itemEdit.itemSlotNumber = null;\r\n            newState.itemEdit.itemNewMinPercentage = null;\r\n            newState.itemEdit.itemNewName = null;\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    hideStatusNotification = () => {\r\n        let newState = this.state;\r\n        newState.appControls.isStatusNotificationShown = false;\r\n        this.setState(newState, () => {\r\n            setTimeout(() => {\r\n                let newState = this.state;\r\n                newState.appControls.isStatusNotificationShown = false;\r\n                newState.statusNotificationMsg = null;\r\n                newState.statusNotificationType = null;\r\n                this.setState(newState)\r\n            }, 100);\r\n        })\r\n    }\r\n\r\n    showStatusNotification = (msg, statusType) => {\r\n        let newState = this.state;\r\n\r\n        newState.appControls.isStatusNotificationShown = true;\r\n        newState.statusNotificationMsg = msg;\r\n        newState.statusNotificationType = statusType;\r\n\r\n        this.setState(newState)\r\n    }\r\n\r\n    toggleSideMenu = (evt) => {\r\n        let newState = this.state;\r\n        \r\n        newState.appControls.isSideMenuShown = \r\n        !this.state.appControls.isSideMenuShown;\r\n        \r\n        this.setState(newState);\r\n    }\r\n\r\n    updateUserData = (data, _password=null) => {\r\n        console.log('updateUserData');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForLoginForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForLoginForm();\r\n            return;\r\n        }\r\n\r\n        let newState = this.state;\r\n        newState.user.name = data.data.name;\r\n        newState.user.email = data.data.email;\r\n        newState.user.password = _password;\r\n        newState.user.device_puid = data.data.device_puid;\r\n        newState.items = data.data.items;\r\n        newState.user.isLoggedIn = true;\r\n        if (newState.itemEdit.itemSlotNumber !== null) {\r\n            newState.itemEdit.itemNewName = \r\n                newState.items[newState.itemEdit.itemSlotNumber].name;\r\n            newState.itemEdit.itemNewMinPercentage = \r\n                makeMinPercentage(this, newState.itemEdit.itemSlotNumber);\r\n        }\r\n        this.setState(newState, () => {\r\n            if (this.state.statusNotificationType === 'error') {\r\n                // this.hideStatusNotification();\r\n            }\r\n            this.hideLoaderForLoginForm();\r\n        });\r\n        \r\n    }\r\n\r\n    handleSignup = (data) => {\r\n        console.log('handleSignup');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForSignupForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForSignupForm();\r\n            return;\r\n        }\r\n\r\n        this.showStatusNotification(data.status.msg, 'success');\r\n        this.hideLoaderForSignupForm();\r\n    }\r\n\r\n    handleItemNameUpdate = (data) => {\r\n        console.log('handleItemNameUpdate');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForItemEditForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForItemEditForm();\r\n            return;\r\n        }\r\n\r\n        this.showStatusNotification('Saved', 'success');\r\n        getUserData(\r\n            this.state.user.email, this.state.user.password, \r\n            this.updateUserData\r\n        );\r\n        this.hideLoaderForItemEditForm();\r\n    }\r\n\r\n    handleItemMinPercentageUpdate = (data) => {\r\n        console.log('handleItemMinPercentageUpdate');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForItemEditForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForItemEditForm();\r\n            return;\r\n        }\r\n\r\n        this.showStatusNotification('Saved', 'success');\r\n        getUserData(\r\n            this.state.user.email, this.state.user.password, \r\n            this.updateUserData\r\n        );\r\n        this.hideLoaderForItemEditForm();\r\n    }\r\n    \r\n    handleItemMaxUpdate = (data) => {\r\n        console.log('handleItemMaxUpdate');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForItemEditMaxForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForItemEditMaxForm();\r\n            return;\r\n        }\r\n\r\n        this.showStatusNotification('Saved', 'success');\r\n        getUserData(\r\n            this.state.user.email, this.state.user.password, \r\n            this.updateUserData\r\n        );\r\n        this.hideLoaderForItemEditMaxForm();\r\n    }\r\n\r\n    handleUserNameUpdate = (data) => {\r\n        console.log('handleUserNameUpdate');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForUserEditNameForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForUserEditNameForm();\r\n            return;\r\n        }\r\n\r\n        this.showStatusNotification('Saved', 'success');\r\n        getUserData(\r\n            this.state.user.email, this.state.user.password, \r\n            this.updateUserData\r\n        );\r\n        this.hideLoaderForUserEditNameForm();\r\n    }\r\n    \r\n    handleUserPasswordUpdate = (data) => {\r\n        console.log('handleUserPasswordUpdate');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForUserEditPasswordForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForUserEditPasswordForm();\r\n            return;\r\n        }\r\n\r\n        let newState = this.state;\r\n        newState.user.password = this.state.userEdit.userNewPassword;\r\n        this.setState(newState, () => {\r\n            this.showStatusNotification('Saved', 'success');\r\n            getUserData(\r\n                this.state.user.email, this.state.user.password, \r\n                this.updateUserData\r\n            );\r\n            this.hideLoaderForUserEditPasswordForm();\r\n        });\r\n    }\r\n    \r\n    handleUserDelete = (data) => {\r\n        console.log('handleUserDelete');\r\n        // console.log(data);\r\n\r\n        if (data instanceof Error) {\r\n            console.log('ERRORED');\r\n            this.showStatusNotification(data.toString(), 'error');\r\n            this.hideLoaderForUserDeleteForm();\r\n            return;\r\n        }\r\n\r\n        if (!data.status.is_ok) {\r\n            this.showStatusNotification(\r\n                data.status.code + ': ' + data.status.msg,\r\n                'error'\r\n            );\r\n            this.hideLoaderForUserDeleteForm();\r\n            return;\r\n        }\r\n\r\n        this.hideLoaderForUserDeleteForm();\r\n        this.showStatusNotification(\r\n            'Account deleted from the system', 'error'\r\n        );\r\n        window.setTimeout(() => {\r\n            this.logoutUser({preventDefault: ()=>{}})\r\n        }, 2000);\r\n    }\r\n\r\n    logoutUser = (e) => {\r\n        e.preventDefault();\r\n        this.setState(INITIAL_STATE, () => {\r\n            localStorage.clear();\r\n            window.location.hash = '#/';\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('Main_CompDidUpdate');\r\n        this.writeStateToLocalStorage();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n                <Navbar _main={this} />\r\n\r\n                <Route exact path=\"/\" \r\n                    render={() => (this.state.user.isLoggedIn \r\n                        ? <Redirect to=\"/dashboard\" />\r\n                        : <Redirect to=\"/login\" />\r\n                    )} \r\n                />\r\n                <Route exact path=\"/login\" \r\n                    render={() => (!this.state.user.isLoggedIn \r\n                        ? <Login _main={this} />\r\n                        : <Redirect to=\"/\" />\r\n                    )} \r\n                />\r\n                <Route exact path=\"/logout\" \r\n                    render={() => {\r\n                        return <Redirect to=\"/\" />;\r\n                    }} \r\n                />\r\n                <Route exact path=\"/signup\" \r\n                    render={() => (!this.state.user.isLoggedIn \r\n                        ? <Signup _main={this} />\r\n                        : <Redirect to=\"/\" />\r\n                    )} \r\n                />\r\n                <Route path=\"/dashboard\" \r\n                    render={() => (this.state.user.isLoggedIn \r\n                        ? <Dashboard _main={this} />\r\n                        : <Redirect to=\"/\" />\r\n                    )} \r\n                />\r\n                <Route exact path=\"/myprofile\" \r\n                    render={() => (this.state.user.isLoggedIn \r\n                        ? <UserProfile _main={this} />\r\n                        : <Redirect to=\"/\" />\r\n                    )} \r\n                />\r\n                <Route exact path=\"/about\" \r\n                    render={() => (\r\n                        <About _main={this} />\r\n                    )} \r\n                />\r\n                <StatusNotification _main={this} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Main from './components/Main/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Main />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}